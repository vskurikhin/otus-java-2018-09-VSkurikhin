/*
 * DailyInfo.java
 * This file was last modified at 2018.12.03 20:05 by Victor N. Skurikhin.
 * $Id$
 * This is free and unencumbered software released into the public domain.
 * For more information, please refer to <http://unlicense.org>
 */

package ru.otus.soap.wsclient.cbr;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * Веб сервис для получения ежедневных данных ver 20.03.2018
 * <p>
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(
    name = "DailyInfo",
    targetNamespace = "http://web.cbr.ru/",
    wsdlLocation = "http://www.cbr.ru/DailyInfoWebServ/DailyInfo.asmx?WSDL"
)
public class DailyInfo extends Service
{
    private final static URL DAILYINFO_WSDL_LOCATION;
    private final static WebServiceException DAILYINFO_EXCEPTION;
    private final static QName DAILYINFO_QNAME = new QName("http://web.cbr.ru/", "DailyInfo");

    static {
        URL url = null;
        WebServiceException e = null;

        try {
            url = new URL("http://www.cbr.ru/DailyInfoWebServ/DailyInfo.asmx?WSDL");
        }
        catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }

        DAILYINFO_WSDL_LOCATION = url;
        DAILYINFO_EXCEPTION = e;
    }

    public DailyInfo()
    {
        super(__getWsdlLocation(), DAILYINFO_QNAME);
    }

    public DailyInfo(WebServiceFeature... features)
    {
        super(__getWsdlLocation(), DAILYINFO_QNAME, features);
    }

    public DailyInfo(URL wsdlLocation)
    {
        super(wsdlLocation, DAILYINFO_QNAME);
    }

    public DailyInfo(URL wsdlLocation, WebServiceFeature... features)
    {
        super(wsdlLocation, DAILYINFO_QNAME, features);
    }

    public DailyInfo(URL wsdlLocation, QName serviceName)
    {
        super(wsdlLocation, serviceName);
    }

    public DailyInfo(URL wsdlLocation, QName serviceName, WebServiceFeature... features)
    {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns DailyInfoSoap
     */
    @WebEndpoint(name = "DailyInfoSoap")
    public DailyInfoSoap getDailyInfoSoap()
    {
        return super.getPort(
            new QName("http://web.cbr.ru/", "DailyInfoSoap"),
            DailyInfoSoap.class
        );
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature}
     *                to configure on the proxy.  Supported features not in the
     *                 <code>features</code> parameter will have their default
     *                 values.
     * @return returns DailyInfoSoap
     */
    @WebEndpoint(name = "DailyInfoSoap")
    public DailyInfoSoap getDailyInfoSoap(WebServiceFeature... features)
    {
        return super.getPort(
            new QName("http://web.cbr.ru/", "DailyInfoSoap"),
            DailyInfoSoap.class,
            features
        );
    }

    private static URL __getWsdlLocation()
    {
        if (DAILYINFO_EXCEPTION != null) {
            throw DAILYINFO_EXCEPTION;
        }

        return DAILYINFO_WSDL_LOCATION;
    }
}

/* vim: syntax=java:fileencoding=utf-8:fileformat=unix:tw=78:ts=4:sw=4:sts=4:et
 */
//EOF
